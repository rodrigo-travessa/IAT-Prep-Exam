@model IatPrepExam.Models.Quizz

@{
    ViewData["Title"] = "Results";
    var timeToFinish = Model.FinishedAt - Model.StartedAt;
    string timeToString = timeToFinish.ToString(@"hh\:mm\:ss");
    char[] letters = { 'A', 'B', 'C', 'D', 'E' };
}

<h1>Resultado</h1>
<h5> Pontos : @Model.Score</h5>
<h5> Percentual de Acerto : @Model.ScoreRatio.ToString("P2")</h5>
<div>
    Você levou @timeToString pra concluir o Questionário.
</div>
<div>
    @(timeToFinish.Seconds / Model.NumberOfQuestions) Segundos Por Questão.
    <br /><br />
</div>

<div class="container">

    <div>
        <input asp-for="Id" hidden />
        @if (Model.Questions != null)
        {
            @for (int i = 0; i < Model.Questions.Count; i++)
            {
                <h3>@(i + 1) - @Model.Questions[i].Statement</h3>
                <div>
                    @for (int j = 0; j < Model.Questions[i].Alternatives.Count; j++)
                    {
                        if (!string.IsNullOrEmpty(@Model.Questions[i].Alternatives[j].Text))
                        {

                            <label style="color: @(@Model.Questions[i].Alternatives[j].IsRight ? "blue" : "red")">@letters[j] - @Model.Questions[i].Alternatives[j].Text </label>
                            <br />
                        }
                    }
                </div>
                <h5>
                    Sua Resposta Foi :
                    @if (Model.Answers.Where(x => x.Question == Model.Questions[i]).Count() > 0)
                    {
                        @Model.Answers.Where(x => x.Question == Model.Questions[i]).First().AnswerValue
                        ;
                    }
                </h5>
                <br />
            }
        }

    </div>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
